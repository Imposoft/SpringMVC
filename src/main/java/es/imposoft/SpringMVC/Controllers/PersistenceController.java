package es.imposoft.SpringMVC.Controllers;

import es.imposoft.SpringMVC.Logic.Converter.ConvertUtil;
import es.imposoft.SpringMVC.Models.Greeting;
import es.imposoft.SpringMVC.Entities.Menu;
import es.imposoft.SpringMVC.Models.MenuDTO;
import es.imposoft.SpringMVC.Persistence.MenuRepository;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.io.*;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.concurrent.atomic.AtomicLong;

@RestController
public class PersistenceController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private MenuRepository menuRepository;

    @GetMapping("/testMenu")
    public Menu testMenu() {
        return new Menu("texto");
    }


    @GetMapping("/loadMenu")
    public Menu loadMenu() {
        String menuText = readFileAsString("outputs/testMenu.txt");
        return new Menu(menuText);
    }

    public static String readFileAsString(String fileName) {
        String text = "";
        try {
            text = new String(Files.readAllBytes(Paths.get(fileName)));
        } catch (IOException e) {
            e.printStackTrace();
        }

        return text;
    }

    @PostMapping(value = "/createMenuFile", consumes = "application/json", produces = "application/json")
    public Menu createMenuFile(@RequestBody MenuDTO newMenu) {
        System.out.println("Se ha creado un menu nuevo " + newMenu.getMenuText());
        Menu menuToSave = new Menu(newMenu.getMenuText());
        menuRepository.save(menuToSave);
        try {
            new File("/outputs").mkdirs();
            PrintWriter writer = new PrintWriter("outputs/testMenu.txt", "UTF-8");
            writer.println(newMenu.getMenuText());
            writer.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }

        return menuToSave;
    }

    @PostMapping(value = "/createMenu", consumes = "application/json", produces = "application/json")
    public MenuDTO createMenu(@RequestBody MenuDTO newMenu) {
        System.out.println("Se ha recibido un nuevo menu");
        System.out.println(newMenu.toString());
        menuRepository.save(convertToEntity(newMenu));
        return newMenu;
    }

    private Menu convertToEntity(MenuDTO postDto) {
        Menu menu = ConvertUtil.convertDTOtoMenu(postDto);
        return menu;
    }

    @GetMapping("/deleteMenu")
    public void deleteMenu(@RequestAttribute int id) {
        menuRepository.deleteById(id);
    }
}
